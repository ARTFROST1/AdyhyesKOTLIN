name: üöÄ Release Build

on:
  workflow_dispatch:  # Manual trigger only
    inputs:
      version:
        description: 'Release version (e.g., 1.0.1)'
        required: true
        default: '1.0.1'
      create_tag:
        description: 'Create git tag for this release'
        required: false
        type: boolean
        default: true

jobs:
  build-release:
    name: üì± Build Release APK & AAB
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for creating releases
      actions: read
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: ‚òï Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: üêò Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: wrapper
        
    - name: üîê Decode Keystore
      env:
        ENCODED_KEYSTORE: ${{ secrets.KEYSTORE_BASE64 }}
      run: |
        mkdir -p keystore
        if [ -z "$ENCODED_KEYSTORE" ]; then
          echo "‚ùå KEYSTORE_BASE64 secret is empty or not set"
          exit 1
        fi
        echo "üîç Keystore length: ${#ENCODED_KEYSTORE}"
        echo "$ENCODED_KEYSTORE" | base64 -d > keystore/adygyes-release.keystore
        if [ ! -f keystore/adygyes-release.keystore ]; then
          echo "‚ùå Failed to create keystore file"
          exit 1
        fi
        echo "‚úÖ Keystore decoded successfully"
        ls -la keystore/
        
    - name: üîë Create keystore.properties
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      run: |
        echo "storePassword=$KEYSTORE_PASSWORD" > keystore.properties
        echo "keyPassword=$KEY_PASSWORD" >> keystore.properties
        echo "keyAlias=$KEY_ALIAS" >> keystore.properties
        echo "storeFile=keystore/adygyes-release.keystore" >> keystore.properties
        
    - name: üóùÔ∏è Create local.properties
      env:
        YANDEX_API_KEY: ${{ secrets.YANDEX_MAPKIT_API_KEY }}
      run: |
        echo "YANDEX_MAPKIT_API_KEY=$YANDEX_API_KEY" > local.properties
        
    - name: üîß Make gradlew executable
      run: chmod +x gradlew
      
    - name: üßπ Clean build
      run: ./gradlew clean
      
    - name: üì¶ Build Release APK
      run: ./gradlew assembleFullRelease
      
    - name: üì± Build Release AAB
      run: ./gradlew bundleFullRelease
      
    - name: üîç List build outputs (debug)
      run: |
        echo "=== APK outputs ==="
        find app/build/outputs/apk -name "*.apk" -type f || echo "No APK files found"
        echo "=== AAB outputs ==="
        find app/build/outputs/bundle -name "*.aab" -type f || echo "No AAB files found"
        echo "=== All outputs ==="
        ls -la app/build/outputs/ || echo "No outputs directory"
      
    - name: üìä Get version info
      id: version
      run: |
        VERSION=${{ github.event.inputs.version }}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
        
    - name: üè∑Ô∏è Create git tag (optional)
      if: ${{ github.event.inputs.create_tag == 'true' }}
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git tag "v${{ steps.version.outputs.version }}"
        git push origin "v${{ steps.version.outputs.version }}"
        echo "‚úÖ Created tag: v${{ steps.version.outputs.version }}"
        
    - name: üìù Generate release notes
      id: release_notes
      run: |
        # Use template file and replace version placeholder
        sed "s/{{VERSION}}/${{ steps.version.outputs.version }}/g" .github/release-template.md > release_notes.md
        echo "‚úÖ Release notes generated from template"
        
    - name: üîç Find build files
      id: find_files
      run: |
        # Find AAB file
        AAB_FILE=$(find app/build/outputs/bundle -name "*.aab" -type f | head -1)
        
        # Find ARM64 APK (modern phones)
        ARM64_APK=$(find app/build/outputs/apk -name "*arm64-v8a*.apk" -type f | head -1)
        
        # Find Universal APK (compatibility)
        UNIVERSAL_APK=$(find app/build/outputs/apk -name "*universal*.apk" -type f | head -1)
        
        echo "Found AAB: $AAB_FILE"
        echo "Found ARM64 APK: $ARM64_APK"
        echo "Found Universal APK: $UNIVERSAL_APK"
        
        echo "aab_file=$AAB_FILE" >> $GITHUB_OUTPUT
        echo "arm64_apk=$ARM64_APK" >> $GITHUB_OUTPUT
        echo "universal_apk=$UNIVERSAL_APK" >> $GITHUB_OUTPUT
        
        # Verify files exist
        if [ ! -f "$AAB_FILE" ]; then
          echo "‚ùå AAB file not found!"
          exit 1
        fi
        if [ ! -f "$ARM64_APK" ]; then
          echo "‚ùå ARM64 APK file not found!"
          exit 1
        fi
        if [ ! -f "$UNIVERSAL_APK" ]; then
          echo "‚ö†Ô∏è Universal APK not found, will skip"
        fi
        
        echo "‚úÖ Required files found successfully"
        
    - name: üöÄ Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: AdygGIS v${{ steps.version.outputs.version }}
        body_path: release_notes.md
        draft: false
        prerelease: false
        files: |
          ${{ steps.find_files.outputs.aab_file }}
          ${{ steps.find_files.outputs.arm64_apk }}
          ${{ steps.find_files.outputs.universal_apk }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: üì± Upload AAB artifact
      uses: actions/upload-artifact@v4
      with:
        name: AdygGIS-v${{ steps.version.outputs.version }}-AAB
        path: ${{ steps.find_files.outputs.aab_file }}
        
    - name: üìä Upload ARM64 APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: AdygGIS-v${{ steps.version.outputs.version }}-ARM64-APK
        path: ${{ steps.find_files.outputs.arm64_apk }}
        
    - name: üì¶ Upload Universal APK artifact
      uses: actions/upload-artifact@v4
      if: steps.find_files.outputs.universal_apk != ''
      with:
        name: AdygGIS-v${{ steps.version.outputs.version }}-Universal-APK
        path: ${{ steps.find_files.outputs.universal_apk }}
